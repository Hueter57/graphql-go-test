package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"
	"fmt"

	"github.com/Hueter57/graphql-go-test/graph/model"
	"github.com/Hueter57/graphql-go-test/internal"
)

// Author is the resolver for the author field.
func (r *issueResolver) Author(ctx context.Context, obj *model.Issue) (*model.User, error) {
	// 1. Loaderに検索条件となるIDを登録(この時点では即時実行されない)
	thunk := r.Loaders.UserLoader.Load(ctx, obj.Author.ID)
	// 2. LoaderがDBに対してデータ取得処理を実行するまで待って、結果を受け取る
	user, err := thunk()
	if err != nil {
		return nil, err
	}
	return user, nil
}

// Repository is the resolver for the repository field.
func (r *issueResolver) Repository(ctx context.Context, obj *model.Issue) (*model.Repository, error) {
	panic(fmt.Errorf("not implemented: Repository - repository"))
}

// ProjectItems is the resolver for the projectItems field.
func (r *issueResolver) ProjectItems(ctx context.Context, obj *model.Issue, after *string, before *string, first *int, last *int) (*model.ProjectV2ItemConnection, error) {
	panic(fmt.Errorf("not implemented: ProjectItems - projectItems"))
}

// Node is the resolver for the node field.
func (r *issueEdgeResolver) Node(ctx context.Context, obj *model.IssueEdge) (*model.Issue, error) {
	panic(fmt.Errorf("not implemented: Node - node"))
}

// Issue returns internal.IssueResolver implementation.
func (r *Resolver) Issue() internal.IssueResolver { return &issueResolver{r} }

// IssueEdge returns internal.IssueEdgeResolver implementation.
func (r *Resolver) IssueEdge() internal.IssueEdgeResolver { return &issueEdgeResolver{r} }

type issueResolver struct{ *Resolver }
type issueEdgeResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *issueConnectionResolver) Edges(ctx context.Context, obj *model.IssueConnection) ([]*model.IssueEdge, error) {
	panic(fmt.Errorf("not implemented: Edges - edges"))
}
func (r *issueConnectionResolver) Nodes(ctx context.Context, obj *model.IssueConnection) ([]*model.Issue, error) {
	panic(fmt.Errorf("not implemented: Nodes - nodes"))
}
func (r *Resolver) IssueConnection() internal.IssueConnectionResolver {
	return &issueConnectionResolver{r}
}
type issueConnectionResolver struct{ *Resolver }
*/
