package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"
	"errors"
	"strings"

	"github.com/Hueter57/graphql-go-test/graph/model"
	"github.com/Hueter57/graphql-go-test/internal"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id string) (model.Node, error) {
	idType := strings.SplitN(id, "_", 2)[0]

	switch idType {
	case "U":
		return r.Srv.GetUserByID(ctx, id)
	case "REPO":
		return r.Srv.GetRepoByID(ctx, id)
	case "ISSUE":
		return r.Srv.GetIssueByID(ctx, id)
	case "PJ":
		return r.Srv.GetProjectByID(ctx, id)
	case "PR":
		// return r.Srv.GetPullRequestByID(ctx, id)
	}
	return nil, errors.New("invalid ID")
}

// Query returns internal.QueryResolver implementation.
func (r *Resolver) Query() internal.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
