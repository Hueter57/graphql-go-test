package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"
	"fmt"

	"github.com/Hueter57/graphql-go-test/graph/model"
	"github.com/Hueter57/graphql-go-test/internal"
)

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, name string) (*model.User, error) {
	return r.Srv.GetUserByName(ctx, name)
}

// ProjectV2 is the resolver for the projectV2 field.
func (r *userResolver) ProjectV2(ctx context.Context, obj *model.User, number int) (*model.ProjectV2, error) {
	panic(fmt.Errorf("not implemented: ProjectV2 - projectV2"))
}

// ProjectV2s is the resolver for the projectV2s field.
func (r *userResolver) ProjectV2s(ctx context.Context, obj *model.User, after *string, before *string, first *int, last *int) (*model.ProjectV2Connection, error) {
	panic(fmt.Errorf("not implemented: ProjectV2s - projectV2s"))
}

// User returns internal.UserResolver implementation.
func (r *Resolver) User() internal.UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
